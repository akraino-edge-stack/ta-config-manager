{
  "comments": [
    {
      "key": {
        "uuid": "04a366de_a585db66",
        "filename": "cmdatahandlers/src/cmdatahandlers/performance_profiles/config.py",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 183
      },
      "writtenOn": "2019-09-12T09:15:13Z",
      "side": 1,
      "message": "generic comment for the whole enhancement: the interrogation and setting code shall tolerate the absence of ANY low latency options set\nthey should simply return \"nothing\", and the kcmd setter should simply not set any extra options",
      "revId": "5ee4e0b96656316ab575347df3670b5d023cb0ec",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94a54635_ef4fb194",
        "filename": "cmdatahandlers/src/cmdatahandlers/performance_profiles/config.py",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 186
      },
      "writtenOn": "2019-09-12T18:41:35Z",
      "side": 1,
      "message": "I changed the new getter\u0027s return value, however I kept `get_tuning` as it. Changing the return value would introduce API breaks.",
      "parentUuid": "04a366de_a585db66",
      "revId": "5ee4e0b96656316ab575347df3670b5d023cb0ec",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85c2c095_8b376b0a",
        "filename": "cmdatahandlers/src/cmdatahandlers/performance_profiles/config.py",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 183
      },
      "writtenOn": "2019-09-13T12:17:03Z",
      "side": 1,
      "message": "what do you mean it would introduce API breaks? I thought get_tuning is the \"new getter\"\nif you by default set these parameters into the CM, and it can never happens that the getters are trying to read something, then throwing exception is dead code\nif you are not always setting values into optional parameters then throwing exceptions when they don\u0027t have a value is awful design\n\nin none of the above cases you need exceptions. what you need is handling a NORMAL case, that is, optional parameter does not have a value",
      "parentUuid": "94a54635_ef4fb194",
      "revId": "5ee4e0b96656316ab575347df3670b5d023cb0ec",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85be0689_98e501fe",
        "filename": "cmdatahandlers/src/cmdatahandlers/performance_profiles/config.py",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 186
      },
      "writtenOn": "2019-09-16T17:44:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85c2c095_8b376b0a",
      "revId": "5ee4e0b96656316ab575347df3670b5d023cb0ec",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": false
    }
  ]
}